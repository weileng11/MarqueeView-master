apply plugin: 'com.android.application'

Properties signingProperties = new Properties()
signingProperties.load(new FileInputStream(file("../signings/signing.properties")))

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.sunfusheng.sample"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            storeFile file(signingProperties['KEYSTORE_FILEPATH'])
            storePassword signingProperties['STORE_PASSWORD']
            keyAlias signingProperties['KEY_ALIAS']
            keyPassword signingProperties['KEY_PASSWORD']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "MarqueeView.apk"
                }
            }
        }
    }
}

def localSourceEnabled = true

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:' + rootProject.supportLibraryVersion
    implementation 'com.android.support:design:' + rootProject.supportLibraryVersion
    implementation 'com.android.support:recyclerview-v7:' + rootProject.supportLibraryVersion

    if (localSourceEnabled) {
        implementation project(':MarqueeView')
    } else {
        implementation 'com.sunfusheng:marqueeview:' + rootProject.versionName
    }
}
